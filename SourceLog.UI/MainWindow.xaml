<Window x:Class="SourceLog.MainWindow"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
        xmlns:local="clr-namespace:SourceLog" 
        xmlns:tb="clr-namespace:Hardcodet.Wpf.TaskbarNotification;assembly=Hardcodet.Wpf.TaskbarNotification" Title="SourceLog" Height="700" Width="900"
		Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
		TextOptions.TextFormattingMode="Display" 
        Icon="/SourceLog;component/Icon.ico">
	<Window.Resources>
		<local:SingleLineTextConverter x:Key="SingleLineTextConverter" />
		<local:SubscriptionLabelConverter x:Key="SubscriptionLabelConverter" />
		<local:LogToHasUnreadEntriesFlagConverter x:Key="LogToHasUnreadEntriesFlagConverter" />
		<local:ShowWindowCommand x:Key="ShowWindowCommand" />
	</Window.Resources>
	<Window.InputBindings>
		<KeyBinding Modifiers="Control" Key="Q" Command="{Binding MarkLogEntryAsRead}" CommandParameter="{Binding SelectedLogEntry, Mode=TwoWay}" />
	</Window.InputBindings>
	<Grid Margin="3">
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="150" />
			<ColumnDefinition Width="Auto" />
			<ColumnDefinition Width="*" />
		</Grid.ColumnDefinitions>
		<Grid.RowDefinitions>
			<!--Toolbar-->
			<RowDefinition Height="Auto" />
			<!--DataGrid-->
			<RowDefinition Height="2*" />
			<!--GridSplitter-->
			<RowDefinition Height="Auto" />
			<!--Message-->
			<RowDefinition Height="*" />
			<!--GridSplitter-->
			<RowDefinition Height="Auto" />
			<!--Changed files-->
			<RowDefinition Height="*" />
			<!--GridSplitter-->
			<RowDefinition Height="Auto" />
			<!--Diff viewer-->
			<RowDefinition Height="4*" />
		</Grid.RowDefinitions>

		<DockPanel Grid.Row="0" Grid.ColumnSpan="3">
			<StackPanel Orientation="Horizontal" DockPanel.Dock="Left">
				<Button Content="Add Subscription" Click="AddSubscriptionClick" Margin="5" Padding="3" />
			</StackPanel>
			<Label DockPanel.Dock="Right" Content="lblVersion" Height="28" Name="lblVersion" HorizontalAlignment="Right" />
		</DockPanel>


		<ListBox x:Name="lstSubscriptions" Grid.Row="1" Grid.RowSpan="5" ItemsSource="{Binding LogSubscriptions}" 
			SelectionChanged="LstSubscriptionsSelectionChanged" SelectedItem="{Binding SelectedLogSubscription}">
			<ListBox.Resources>
				<ContextMenu x:Key="SubscriptionContextMenu">
					<MenuItem Header="Mark all as read" Click="MarkAllLogEntriesAsRead" />
					<MenuItem Header="Edit" Click="EditSubscription" />
					<MenuItem Header="Delete.." Click="DeleteSubscription" />
				</ContextMenu>
				<Style TargetType="{x:Type ListBoxItem}">
					<Setter Property="ContextMenu" Value="{StaticResource SubscriptionContextMenu}" />
				</Style>
			</ListBox.Resources>
			<ListBox.ItemTemplate>
				<DataTemplate>
					<TextBlock>
						 <!--Text="{Binding Name}"-->
						<TextBlock.Style>
							<Style TargetType="TextBlock">
								<Style.Triggers>
									<DataTrigger Binding="{Binding Log, Converter={StaticResource LogToHasUnreadEntriesFlagConverter}}" Value="true" >
										<Setter Property="FontWeight" Value="Bold" />
									</DataTrigger>
									<DataTrigger Binding="{Binding Log, Converter={StaticResource LogToHasUnreadEntriesFlagConverter}}" Value="false" >
										<Setter Property="FontWeight" Value="Normal" />
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</TextBlock.Style>
						<TextBlock.Text>
							<MultiBinding Converter="{StaticResource SubscriptionLabelConverter}">
								<Binding Path="Name" />
								<Binding Path="Log" />
							</MultiBinding>
						</TextBlock.Text>
						<!--<TextBlock.ContextMenu>
							<ContextMenu>
								<MenuItem Header="Edit" Click="MenuItem_Click" />
								<MenuItem Header="Delete" Click="MenuItem_Click_1" />
							</ContextMenu>
						</TextBlock.ContextMenu>-->
					</TextBlock>
				</DataTemplate>
			</ListBox.ItemTemplate>
		</ListBox>

		<GridSplitter Grid.Row="1" Grid.Column="1" Grid.RowSpan="5" Width="3" VerticalAlignment="Stretch" HorizontalAlignment="Center"
					ShowsPreview="False" />

		<DataGrid Grid.Row="1" Grid.Column="2" Name="dgLog" ItemsSource="{Binding Log}"
			AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" CanUserSortColumns="False"
			SelectionChanged="DgLogSelectionChanged" IsReadOnly="True">
			<DataGrid.Style>
				<Style TargetType="DataGrid">
					<Setter Property="HorizontalGridLinesBrush" Value="#DDDDDD" />
					<Setter Property="VerticalGridLinesBrush" Value="#DDDDDD" />

					<Setter Property="RowStyle">
						<Setter.Value>
							<Style TargetType="DataGridRow">
								<Style.Triggers>
									<Trigger Property="IsMouseOver" Value="True">
										<Setter Property="Background" Value="#F3F8FF" />
									</Trigger>
								</Style.Triggers>
							</Style>
						</Setter.Value>
					</Setter>
				</Style>
			</DataGrid.Style>
			<DataGrid.CellStyle>
				<Style TargetType="DataGridCell">
					<Setter Property="BorderThickness" Value="0"/>
					<Setter Property="Padding" Value="3,2,3,2" />
					<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="DataGridCell">
								<Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
									<ContentPresenter />
								</Border>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
					<Style.Triggers>
						<Trigger Property="IsSelected" Value="True">
							<Setter Property="Background" Value="#D0E5FF" />
							<Setter Property="Foreground" Value="Black" />
						</Trigger>
						<DataTrigger Binding="{Binding Read}" Value="False">
							<Setter Property="FontWeight" Value="Bold" />
						</DataTrigger>
					</Style.Triggers>
				</Style>
			</DataGrid.CellStyle>
			<DataGrid.Columns>
				<DataGridTextColumn Header="Revision" Binding="{Binding Path=Revision}">
					<DataGridTextColumn.ElementStyle>
						<Style TargetType="TextBlock">
							<Setter Property="HorizontalAlignment" Value="Right" />
						</Style>
					</DataGridTextColumn.ElementStyle>
				</DataGridTextColumn>
				<DataGridTextColumn Header="Date" Binding="{Binding Path=CommittedDate, StringFormat={}\{0:HH:mm:ss dd MMMM yyyy\}}" />
				<DataGridTextColumn Header="Author" Binding="{Binding Path=Author}" Width="120" />
				<DataGridTextColumn Header="Message" Binding="{Binding Path=Message, Converter={StaticResource SingleLineTextConverter}}" Width="*" />
				<!--<DataGridTemplateColumn Header="Message">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<TextBlock Text="{Binding Path=Message}" TextWrapping="NoWrap" />
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>-->
			</DataGrid.Columns>
		</DataGrid>

		<GridSplitter Grid.Row="2" Grid.Column="2" Height="3" VerticalAlignment="Center" HorizontalAlignment="Stretch"
			ShowsPreview="False" />

		<TextBox Grid.Row="3" Grid.Column="2" IsReadOnly="True"
				 Text="{Binding Path=SelectedLogEntryMessage, Mode=OneWay}" TextWrapping="Wrap"
				 ScrollViewer.VerticalScrollBarVisibility="Auto" />

		<GridSplitter Grid.Row="4" Grid.Column="2" Height="3" VerticalAlignment="Center" HorizontalAlignment="Stretch"
			ShowsPreview="False" />

		<ListBox x:Name="lstChangedFiles" Grid.Row="5" Grid.Column="2" ItemsSource="{Binding SelectedLogEntryChangedFiles}"
			SelectionChanged="LstChangedFilesSelectionChanged" SelectedItem="{Binding SelectedChangedFile}">
			<ListBox.ItemTemplate>
				<DataTemplate>
					<!--<TextBlock Text="{Binding FileName}" />-->
					<TextBlock>
						<TextBlock.Text>
							<MultiBinding StringFormat="{}{0}: {1}">
								<Binding Path="ChangeType" />
								<Binding Path="FileName" />
							</MultiBinding>
						</TextBlock.Text>
					</TextBlock>
				</DataTemplate>
			</ListBox.ItemTemplate>
		</ListBox>

		<GridSplitter Grid.Row="6" Grid.Column="0" Grid.ColumnSpan="3" Height="3" VerticalAlignment="Center" HorizontalAlignment="Stretch"
			ShowsPreview="False" />

		<Border Grid.Row="7" Grid.Column="0" Grid.ColumnSpan="3" BorderThickness="1" BorderBrush="Gray" SnapsToDevicePixels="True">
			<Grid Background="White">
				<Grid.ColumnDefinitions>
					<ColumnDefinition />
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition />
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition />
				</Grid.RowDefinitions>
				<ScrollViewer Name="LeftScroller" Margin="0" Grid.Column="0" Grid.Row="0" 
						  HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto"
						  ScrollChanged="LeftScrollerScrollChanged">
					<FlowDocumentScrollViewer Background="Transparent" x:Name="LeftBox"
											  PreviewMouseWheel="PassDiffPaneMouseWheelToParent"
											  ScrollViewer.VerticalScrollBarVisibility="Hidden" />


				</ScrollViewer>
				<GridSplitter Grid.Row="0" Grid.Column="1" Width="3" VerticalAlignment="Stretch" HorizontalAlignment="Center"
					ShowsPreview="False" />
				<ScrollViewer Name="RightScroller" Grid.Column="2" Grid.Row="0" 
						  HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto"
						  ScrollChanged="RightScrollerScrollChanged">
					<FlowDocumentScrollViewer Background="Transparent" x:Name="RightBox" PreviewMouseWheel="PassDiffPaneMouseWheelToParent"
														  ScrollViewer.VerticalScrollBarVisibility="Hidden" />

				</ScrollViewer>
			</Grid>
		</Border>
		<tb:TaskbarIcon x:Name="NotifyIcon"
						IconSource="/Icon.ico"
						ToolTipText="SourceLog"
						LeftClickCommand="{StaticResource ShowWindowCommand}"
						LeftClickCommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
						DoubleClickCommand="{StaticResource ShowWindowCommand}"
						DoubleClickCommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
	</Grid>
</Window>
